{"version":3,"sources":["tile-sorter.js"],"names":["TileSorter","[object Object]","btnSelector","tileSelector","this","_btnSelector","tiles","document","querySelectorAll","_tiles","Array","prototype","map","call","DOMTile","node","categories","dataset","tileTags","split","_filter","_filteredTiles","window","addEventListener","_init","bind","once","_snapInitialState","_controlsClickHandler","_inited","tilesParent","parent","tilesInRow","tile","chidren","getComputedStyle","clientTop","prevTileTop","console","log","event","target","closest","preventDefault","filter","tileFilter","length","_sort","item","includes"],"mappings":"AAAA,MAAMA,WACFC,aAAYC,YACRA,EAAWC,aACXA,IAEAC,KAAKC,aAAeH,EAEpB,MAAMI,EAAQC,SAASC,iBAAiBL,GACxCC,KAAKK,OAASC,MAAMC,UAAUC,IAAIC,KAAKP,EAAOQ,IAAW,CACrDC,KAAMD,EACNE,WAAYF,EAAQG,QAAQC,SAASC,MAAM,QAG/Cf,KAAKgB,QAAU,GACfhB,KAAKiB,eAAiB,GAEtBC,OAAOC,iBAAiB,OAAQnB,KAAKoB,MAAMC,KAAKrB,MAAO,CAAEsB,MAAM,IAGnEzB,QACIG,KAAKuB,oBAELpB,SAASgB,iBAAiB,QAASnB,KAAKwB,sBAAsBH,KAAKrB,OAEnEA,KAAKyB,SAAU,EAGnB5B,oBACI,MAAM6B,EAAc1B,KAAKK,OAAO,GAAGM,KAAKgB,OAExC,IAAIC,EAAa,EAEjB,IAAK,MAAMC,KAAQH,EAAYI,QAAS,CACpCF,IAEuBG,iBAAiBF,GAAMG,UAE1CC,EAIRC,QAAQC,IAAIP,GAGhB/B,sBAAsBuC,GAClB,MAAMC,EAASD,EAAMC,OAAOC,QAAQtC,KAAKC,cAEzC,IAAKoC,EAAQ,OAEbD,EAAMG,iBAEN,MAAMC,EAASH,EAAOxB,QAAQ4B,WAEzBD,IACU,MAAXA,EAAgBxC,KAAKgB,QAAQ0B,OAAS,EACrC1C,KAAKgB,QAEVhB,KAAK2C,SAGT9C,QACIG,KAAKiB,eAAiBjB,KAAKK,OAAOmC,OAAOI,GAC9BA,EAAKhC,WAAWiC","file":"tile-sorter.js","sourcesContent":["class TileSorter {\r\n    constructor({\r\n        btnSelector,\r\n        tileSelector,\r\n    }) {\r\n        this._btnSelector = btnSelector;\r\n\r\n        const tiles = document.querySelectorAll(tileSelector);\r\n        this._tiles = Array.prototype.map.call(tiles, DOMTile => ({\r\n            node: DOMTile,\r\n            categories: DOMTile.dataset.tileTags.split(\",\"),\r\n        }));\r\n\r\n        this._filter = [];\r\n        this._filteredTiles = [];\r\n\r\n        window.addEventListener(\"load\", this._init.bind(this), { once: true });\r\n    }\r\n\r\n    _init() {\r\n        this._snapInitialState();\r\n\r\n        document.addEventListener(\"click\", this._controlsClickHandler.bind(this));\r\n\r\n        this._inited = true;\r\n    }\r\n\r\n    _snapInitialState() {\r\n        const tilesParent = this._tiles[0].node.parent;\r\n\r\n        let tilesInRow = 0;\r\n        let prevTileTop = -1;\r\n        for (const tile of tilesParent.chidren) {\r\n            tilesInRow++;\r\n\r\n            const currentTileTop = getComputedStyle(tile).clientTop;\r\n\r\n            if (prevTileTop > -1 && currentTileTop > prevTileTop)\r\n                break;\r\n        }\r\n\r\n        console.log(tilesInRow)\r\n    }\r\n\r\n    _controlsClickHandler(event) {\r\n        const target = event.target.closest(this._btnSelector);\r\n\r\n        if (!target) return;\r\n\r\n        event.preventDefault();\r\n\r\n        const filter = target.dataset.tileFilter;\r\n\r\n        if (!filter) return;\r\n        if (filter === \"*\") this._filter.length = 0;\r\n        else this._filter\r\n\r\n        this._sort();\r\n    }\r\n\r\n    _sort() {\r\n        this._filteredTiles = this._tiles.filter(item => {\r\n            return item.categories.includes();\r\n        })\r\n    }\r\n}"]}